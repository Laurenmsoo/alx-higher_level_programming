===========================
3-say_my_name.py module
===========================

This modules defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` returnss "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Lauren", "Muthoni")
    My name is Lauren Muthoni

::

    >>> say_my_name("Jk lm", "Ann")
    My name is Jk lm Ann

The ```last_name``` parameter is optional and if not provided, it prints a null string

::

    >>> say_my_name("Muthoni")
    My name is Muthoni 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(6, "Jakes")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Bron", ["Cavins", "Lankers", "eat"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Bron": 6, "Jack": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

Test with 1 name

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
